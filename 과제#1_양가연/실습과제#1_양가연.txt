A
Int i1 = 10;
Int i2 = 20;
const int *pInt1;
pInt1 = &i1;
*pInt1 = 30;

A 코드의 경우, int형 포인터 변수가 가리키는 대상(변수)에 const 속성이 부여되었기 때문에 pInt1가 가리키고 있는 변수의 값을 변경할 수 없게 된다. 
따라서 *pInt1 = 30; 에서 오류가 발생하게 된다.

B
Int i1 = 10;
Int i2 = 20;
Int* const pInt2 = &i1;
pInt2 = &i2;
*pInt2 = 50;

B 코드의 경우 포인터 변수 pInt2 자체에 const 속성이 부여된다. 이럴 경우 포인터가 가리킬 대상을 한 번 정하고 나면 이를 변경할 수 없다. 
즉 변수 i2를 가리키고 있는 pInt2가 다른 변수를 가리킬 수는 없는 것이다. 
따라서 pInt2= &i2; 에서 오류가 발생하게 된다.

C
int i1 = 10;
int i2 = 20;
const int * const p = &i2;
p = &i1;
*p = 40;

C 코드의 경우 포인터변수 p 자체와, p가 가리키는 대상 모두 const 속성을 띄게 된다. 
즉, 한 번 초기화가 되면 p가 가리킬 대상과 그 변수의 값 모두 변경할 수 없다. 
따라서 p = &1;과 p = &i1; 두 문장 모두 오류를 발생시킨다. 
